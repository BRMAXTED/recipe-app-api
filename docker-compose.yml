services:
  app: # Name of our service. Convention is to call it app
    build:
      context: .  # states that we want to build the docker file in our current directory
      args:
        - DEV=true # This variable is True if built from docker-compose, and false if built from Dockerfile
    ports:
      - "8000:8000"
      - "5678:5678" # Added this port for debugpy
    volumes:
      - ./app:/app # maps directories of our machine to the docker container
      #           (app directory is mapped to the app directory in the container)
    # the commands we need to run to start the service
    # 1. Waits for db to be available
    # 2. performs any migrations of the db
    # 3. Starts the server
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      # Note: These values are used by django to pull in the database
      # Note: the name of the DB_HOST is the same name as a service "db"
      - DB_HOST=db
      # Following need to match those set in the db environment
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on: # this tells docker compose to wait for the db to start as it depends on the service
      - db

  db:
    image: postgres:16-alpine # This is the postgreSQL service image on Docker
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
    # Following items sets the initial database configuration for db service
      - POSTGRES_DB=devdb # Name of the postgres database in the environment
    # Note: these are not what is used if we deploy actual server, just for development
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme


volumes:
  dev-db-data: